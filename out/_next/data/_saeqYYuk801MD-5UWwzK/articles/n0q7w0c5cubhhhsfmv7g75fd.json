{"pageProps":{"article":{"id":272,"documentId":"n0q7w0c5cubhhhsfmv7g75fd","title":"【データモデリング】 概念設計のチュートリアル","content":"データモデリングは、システム設計の基盤となる重要なプロセスです。\n特に、エンティティを適切に抽出することで、データの構造が明確になり、システムの拡張性や保守性が向上します。\n本記事では、ECサイトを題材にして、エンティティ抽出の手順を詳しく解説します。\n\n## 1. シナリオの設定\n\nまず、ECサイトにおける主要な機能を整理しましょう。\n\n- **商品一覧の表示**\n- **カートへの追加・削除**\n- **注文処理**\n- **決済処理**\n\nこのシナリオをもとに、データモデルの基盤となるエンティティを抽出します。\n\n## 2. エンティティ抽出の手順\n\nエンティティとは、システム内で管理すべき「データのまとまり」です。\nエンティティを抽出する際には、以下の観点からアプローチすると整理しやすくなります。\n\n### 2.1 モノとコトの視点でのエンティティ抽出\n\nエンティティは、大きく「モノ（物理的または概念的な存在）」と「コト（イベントや取引）」の2種類に分類できます。\n\n- **モノ:** ユーザー、商品 など、実態として存在するもの\n- **コト:** 注文、決済 など、システム内で発生する出来事や取引\n\nこの視点でシナリオを整理し、以下の手順でエンティティを洗い出します。\n\n1. システム内で管理する必要がある「**モノ**」を特定する\n2. システム内で発生する「**コト**」を特定する\n3. エンティティごとに**ナチュラルキー（自然キー）**を見つける\n    - ナチュラルキーとは、データを一意に識別できる属性の組み合わせ（例: ユーザー は メールアドレス、 商品 は 商品コード など）\n4. エンティティ間の関連を整理する\n\n## 3. エンティティと属性\n\n以下のようなエンティティを抽出し、それぞれの属性を定義します。\n\n| エンティティ和名 | エンティティ英名 | 区分 | 属性名 (日) | 属性名 (英) | 説明 |\n| --- | --- | --- | --- | --- | --- |\n| ユーザー | **User** | モノ | ユーザー名 | username | ユーザーの識別情報 |\n|  |  |  | メールアドレス | email | ユーザーの連絡先（ナチュラルキー） |\n|  |  |  | パスワード | password | 認証情報 |\n| 商品 | **Product** | モノ | 商品名 | name | 商品の名称 |\n|  |  |  | 商品コード | product_code | 一意に識別できる商品番号（ナチュラルキー） |\n|  |  |  | 価格 | price | 商品の販売価格 |\n|  |  |  | 在庫数 | stock | 在庫の数量 |\n| カート | **Cart** | コト | ユーザー | user | カートを持つユーザー |\n|  |  |  | 商品 | product | カートに入っている商品 |\n|  |  |  | 数量 | quantity | 選択された商品の個数 |\n|  |  |  | 追加日時 | added_at | カートに追加した日時 |\n| 注文 | **Order** | コト | 注文番号 | order_number | 一意に識別できる注文番号（ナチュラルキー） |\n|  |  |  | ユーザー | user | 注文を行ったユーザー |\n|  |  |  | 合計金額 | total_price | 注文の総額 |\n|  |  |  | ステータス | status | 注文の状態（例: 確定、発送済み） |\n|  |  |  | 注文日時 | orderd_at | 注文した日時 |\n| 決済 | **Payment** | コト | 決済番号 | payment_number | 一意に識別できる決済番号（ナチュラルキー） |\n|  |  |  | 注文 | order | 対応する注文 |\n|  |  |  | 決済方法 | method | クレジットカード、銀行振込などの支払い方法 |\n|  |  |  | ステータス | status | 決済の状態（成功、失敗など） |\n|  |  |  | 決済日時 | payment_at | 決済した日時 |\n\n## 4. エンティティ間の関係（ER図）\n\n以下のER図を使用して、エンティティ間の関係を可視化します。\n\n```mermaid\nerDiagram\n    User {\n        string username\n        string email\n        string password\n    }\n    Product {\n        string name\n        string product_code\n        float price\n        int stock\n    }\n    Cart {\n        string user\n        string product\n        int quantity\n    }\n    Order {\n        string order_number\n        string user\n        float total_price\n        string status\n    }\n    Payment {\n        string payment_number\n        string order\n        string method\n        string status\n    }\n\n    User ||--o{ Cart : has\n    User ||--o{ Order : places\n    Cart }o--|| Product : contains\n    Order }o--|| Product : includes\n    Order ||--o{ Payment : processes\n\n```\n\n### 関係の説明\n\n- **User と Cart**: 1人のユーザーが複数のカートエントリを持つ（1対多）\n- **User と Order**: 1人のユーザーが複数の注文を行う（1対多）\n- **Cart と Product**: 1つのカートには複数の商品が含まれる（多対多）\n- **Order と Product**: 1つの注文には複数の商品が含まれる（多対多）\n- **Order と Payment**: 1つの注文に対して1つの決済が行われる（1対1）\n\nここでは、エンティティの物理名やIDについては言及せず、ナチュラルキーに着目してエンティティを定義しています。\n\n## 5. まとめ\n\nエンティティ抽出は、データモデリングの第一歩です。本記事では、ECサイトの基本機能をもとに、エンティティを抽出し、それぞれの属性を定義しました。また、「モノとコト」の視点からエンティティを整理し、ナチュラルキーに着目する手法を紹介しました。\n\n次のステップとして、正規化やリレーショナルデータベースの設計へと進んでいきましょう！\n\n---\n\n","createdAt":"2025-05-19T08:50:58.499Z","updatedAt":"2025-06-06T00:02:08.805Z","publishedAt":"2025-06-06T00:02:08.815Z","docId":"epxkohh8giq3ixsw7zblinio","tags":[{"id":6,"documentId":"bnetm5oe2jokv3u2ib1nibia","createdAt":"2025-05-19T09:45:00.761Z","updatedAt":"2025-05-19T09:45:00.761Z","publishedAt":"2025-05-19T09:45:00.769Z","name":"Database"},{"id":4,"documentId":"zc573y83cxbfql2umdwbhot9","createdAt":"2025-05-19T09:44:33.028Z","updatedAt":"2025-05-19T09:44:33.028Z","publishedAt":"2025-05-19T09:44:33.035Z","name":"Tutorial"}],"thumbnail":[{"id":28,"documentId":"sxm796ppmcgbr1lcrynslvnk","name":"20250513-24.png","alternativeText":null,"caption":null,"width":1503,"height":844,"formats":{"thumbnail":{"name":"thumbnail_20250513-24.png","hash":"thumbnail_20250513_24_770ed9dea0","ext":".png","mime":"image/png","path":null,"width":245,"height":138,"size":11.93,"sizeInBytes":11934,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/thumbnail_20250513_24_770ed9dea0.png"},"medium":{"name":"medium_20250513-24.png","hash":"medium_20250513_24_770ed9dea0","ext":".png","mime":"image/png","path":null,"width":750,"height":421,"size":45.23,"sizeInBytes":45231,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/medium_20250513_24_770ed9dea0.png"},"large":{"name":"large_20250513-24.png","hash":"large_20250513_24_770ed9dea0","ext":".png","mime":"image/png","path":null,"width":1000,"height":562,"size":62.27,"sizeInBytes":62274,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/large_20250513_24_770ed9dea0.png"},"small":{"name":"small_20250513-24.png","hash":"small_20250513_24_770ed9dea0","ext":".png","mime":"image/png","path":null,"width":500,"height":281,"size":27.34,"sizeInBytes":27335,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/small_20250513_24_770ed9dea0.png"}},"hash":"20250513_24_770ed9dea0","ext":".png","mime":"image/png","size":18.8,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/20250513_24_770ed9dea0.png","previewUrl":null,"provider":"@strapi/provider-upload-aws-s3","provider_metadata":null,"createdAt":"2025-05-20T07:54:30.053Z","updatedAt":"2025-05-20T07:54:30.053Z","publishedAt":"2025-05-20T07:54:30.053Z"}]}},"__N_SSG":true}