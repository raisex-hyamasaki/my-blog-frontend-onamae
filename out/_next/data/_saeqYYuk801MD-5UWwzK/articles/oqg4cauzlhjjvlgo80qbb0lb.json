{"pageProps":{"article":{"id":253,"documentId":"oqg4cauzlhjjvlgo80qbb0lb","title":"SNSサブスクリプションフィルターの活用","content":"AWS SNS（Simple Notification Service）は、アプリケーション間でメッセージをやり取りするための強力なサービスです。SNSの特徴の一つに、特定の条件に基づいてメッセージをフィルタリングするサブスクリプションフィルタがあります。これにより、受信側でメッセージを効率的に振り分ける事が可能です。\n\nこの記事では、SNSサブスクリプションフィルターを使ったシステム構成と、そのフィルタリング方法について解説します。\n\n---\n\n# 1. 構成\n\nSNSサブスクリプションフィルターを活用したシンプルな構成の例です。\n\n- SNS → SQS → Lambda\n\nここでのポイントは、SNSが複数のSQSにメッセージを配信し、それぞれ異なるLambda関数がそのメッセージを処理するということです。SQSのキューにメッセージを送る際、SNSのサブスクリプションフィルターを使うことで、特定の属性や条件に基づいたメッセージの配信をコントロールできます。\n\n---\n\n# 2. メッセージ属性でのフィルタリング\n\nSNSのメッセージ属性を利用して、特定の属性値を持つメッセージだけを特定のSQSに配送するように設定できます。\n\n### サブスクリプションフィルターポリシー例\n\n次のポリシーでは、`filterType`という属性が「1」の場合にのみメッセージを受信します。\n\n```json\n{\n  \"filterType\": [\"1\"]\n}\n\n```\n\n### Lambda関数の例\n\nLambda関数からSNSにメッセージを送信する際に、フィルタリング対象となる属性を指定します。\n\n```python\nimport json\nimport boto3\n\ndef lambda_handler(event, context):\n    sns = boto3.client('sns')\n    message = {\n        'type': '1',\n        'message': 'Hello from Lambda!',\n        'key1': 'val1',\n        'key2': 'val2',\n        'result': {\n            'alertType': 'warn'\n        }\n    }\n    message_attributes = {\n        'filterType': {'DataType': 'String', 'StringValue': '1'}\n    }\n\n    response = sns.publish(\n        TopicArn='arn:aws:sns:us-east-1:9999999999:MyTopic',  # SNSトピックのARNを指定\n        Message=json.dumps(message),  # メッセージ本文\n        Subject='Test message from Lambda',  # メッセージのタイトル（オプション）\n        MessageAttributes=message_attributes\n    )\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps('Hello from Lambda!')\n    }\n\n```\n\nこの例では、`filterType`が「1」であるメッセージがSNSに送信され、そのメッセージ属性に基づいてフィルタリングが行われます。\n\n---\n\n# 3. メッセージ本文でのフィルタリング\n\nSNSではメッセージ本文の内容に基づいてもフィルタリングが可能です。次の例では、メッセージ本文内の`result.alertType`が「warn」または「error」の場合にのみメッセージを受信します。\n\n### サブスクリプションフィルターポリシー例\n\n```json\n{\n  \"result\": {\n    \"alertType\": [\n      \"error\",\n      \"warn\"\n    ]\n  }\n}\n\n```\n\n### Lambda関数の例\n\nLambda関数からメッセージを送信する際に、メッセージ本文の内容に基づいたフィルタリングが行われます。\n\n```python\nimport json\nimport boto3\n\ndef lambda_handler(event, context):\n    sns = boto3.client('sns')\n    message = {\n        'type': '1',\n        'message': 'Hello from Lambda!',\n        'key1': 'val1',\n        'key2': 'val2',\n        'result': {\n            'alertType': 'warn'\n        }\n    }\n    message_attributes = {\n        'filterType': {'DataType': 'String', 'StringValue': '1'}\n    }\n\n    response = sns.publish(\n        TopicArn='arn:aws:sns:us-east-1:9999999999:MyTopic',  # SNSトピックのARNを指定\n        Message=json.dumps(message),  # メッセージ本文\n        Subject='Test message from Lambda',  # メッセージのタイトル（オプション）\n        MessageAttributes=message_attributes\n    )\n\n    print('PublishToSns end')\n\n    return {\n        'statusCode': 200,\n        'body': json.dumps('Hello from Lambda!')\n    }\n\n```\n\nこの例では、`alertType`が「warn」であるため、このメッセージはサブスクリプションポリシーで定義されたフィルターを通過します。\n\n---\n\n# 4. まとめ\n\nSNSサブスクリプションフィルターは、特定のメッセージ属性や本文の内容に基づいて、メッセージをフィルタリングする強力なツールです。この機能を利用することで、例えば特定の警告やエラーが発生した際にのみアラートを発生させるなど、効率的な通知システムを構築できます。\n\nこの仕組みを活用することで、無駄なメッセージの受信を減らし、システムのパフォーマンスや管理の効率を向上させることが可能です。AWSのサーバーレスアーキテクチャの一環として、ぜひSNSサブスクリプションフィルターを使いこなしてみてください！！\n\n---\n","createdAt":"2025-05-19T08:50:57.240Z","updatedAt":"2025-06-05T23:51:32.943Z","publishedAt":"2025-06-05T23:51:32.956Z","docId":"ayrkvgk31u6oa8zp7ktrds2d","tags":[{"id":10,"documentId":"cxt2tbnsy05cazm17p3pp1a3","createdAt":"2025-05-19T09:46:58.860Z","updatedAt":"2025-05-19T09:46:58.860Z","publishedAt":"2025-05-19T09:46:58.868Z","name":"AWS"}],"thumbnail":[{"id":9,"documentId":"qzzy1qmpzz4j4gr38m98h3hp","name":"20250513-05.png","alternativeText":null,"caption":null,"width":1504,"height":844,"formats":{"thumbnail":{"name":"thumbnail_20250513-05.png","hash":"thumbnail_20250513_05_6c940be6e0","ext":".png","mime":"image/png","path":null,"width":245,"height":137,"size":10.98,"sizeInBytes":10981,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/thumbnail_20250513_05_6c940be6e0.png"},"large":{"name":"large_20250513-05.png","hash":"large_20250513_05_6c940be6e0","ext":".png","mime":"image/png","path":null,"width":1000,"height":561,"size":59.58,"sizeInBytes":59579,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/large_20250513_05_6c940be6e0.png"},"medium":{"name":"medium_20250513-05.png","hash":"medium_20250513_05_6c940be6e0","ext":".png","mime":"image/png","path":null,"width":750,"height":421,"size":42.52,"sizeInBytes":42523,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/medium_20250513_05_6c940be6e0.png"},"small":{"name":"small_20250513-05.png","hash":"small_20250513_05_6c940be6e0","ext":".png","mime":"image/png","path":null,"width":500,"height":281,"size":25.85,"sizeInBytes":25846,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/small_20250513_05_6c940be6e0.png"}},"hash":"20250513_05_6c940be6e0","ext":".png","mime":"image/png","size":18.18,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/20250513_05_6c940be6e0.png","previewUrl":null,"provider":"@strapi/provider-upload-aws-s3","provider_metadata":null,"createdAt":"2025-05-20T07:42:16.763Z","updatedAt":"2025-05-20T07:42:16.763Z","publishedAt":"2025-05-20T07:42:16.764Z"}]}},"__N_SSG":true}