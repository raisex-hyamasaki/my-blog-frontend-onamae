{"pageProps":{"article":{"id":206,"documentId":"i402h46inwv9yzy1mgah101z","title":"【PDF操作比較】pypdfでPDFからテキスト抽出を行う方法","content":"PDF形式の文書は情報共有や保存に便利ですが、その中のテキストデータを直接操作したい場合、少々手間がかかることがあります。特に、**LLM（大規模言語モデル）のチューニングデータ作成**や、**RAG（Retrieval-Augmented Generation）の文書前処理**では、PDFデータのテキスト抽出が不可欠です。\n\nそこで、この記事では **PythonのPDF操作ライブラリ「pypdf」**を使って、PDFからテキストを抽出する方法を詳しく解説します。\n\n---\n\n# PDF操作ライブラリの選定\n\nPDFのテキストや表を抽出する為のライブラリは複数存在します。比較するのは以下の3つです：\n\n- **pypdf**：軽量でシンプルなPDF操作ライブラリ。テキスト抽出機能を備えています。\n- **pdfplumber**：表や図なども抽出できる高機能ライブラリ。\n- **PyMuPDF（fitz）**：高速かつ多機能なライブラリで、テキスト抽出やPDF編集が可能。\n\n今回は、軽量で簡単に扱える**pypdf**にフォーカスして、基本的な使い方をご紹介します。\n\n---\n\n# pypdfでPDFテキスト抽出を試してみよう！\n\nまずは、簡単なテスト用PDFを用意しましょう。ここでは、Wordで文書を作成し、PDF形式で保存したファイルを使用します。\n\n[読み取りテスト文書.pdf](https://my-blog-frontend-two.vercel.app/docs/読み取りテスト文書.pdf)\n\n# 必要な準備\n\n## pypdfのインストール\n\npypdfはPythonのライブラリとして簡単にインストール可能です。以下のコマンドを実行してください：\n\n```bash\npip install pypdf\n\n```\n\n## 使用するソースコード\n\n以下のPythonコードを使えば、指定したPDFからテキストを抽出し、テキストファイルとして保存することができます。\n\n```python\nimport os\nfrom PyPDF2 import PdfReader\n\ninput_pdf_path = \"./docs/読み取りテスト文書.pdf\"\noutput_txt_path = \"./output/text_extract.txt\"\n\ndef extract_text_from_pdf(input_path, output_path):\n    try:\n        reader = PdfReader(input_path)\n\n        extracted_text = \"\"\n        for page in reader.pages:\n            extracted_text += page.extract_text()\n\n        output_dir = os.path.dirname(output_path)\n        if not os.path.exists(output_dir):\n            os.makedirs(output_dir)\n\n        with open(output_path, \"w\", encoding=\"utf-8\") as f:\n            f.write(extracted_text)\n\n        print(f\"テキストが正常に抽出され、以下のファイルに保存されました: {output_path}\")\n    except Exception as e:\n        print(f\"エラーが発生しました: {e}\")\n\nif __name__ == \"__main__\":\n    extract_text_from_pdf(input_pdf_path, output_txt_path)\n```\n\n---\n\n## 実行方法\n\n1. 上記コードを `text_extract.py` という名前で保存します。\n2. ターミナルやコマンドプロンプトで以下のコマンドを実行します：\n\n```bash\npython3 text_extract.py\n```\n\nこれで、指定したPDFファイルからテキストが抽出され、`output/text_extract.txt` に保存されます。\n\n---\n\n## 実行結果\n\n実際にPDFを読み取った結果は以下の通りです：\n\n```\n   \n \n 1  \n 文書のタイトル  \n見出し 1 \n \n見出し 1-1 \nここには見出し 1-1の本文が入ります。ここには見出し 1-1の本文が入ります。ここには見\n出し1-1の本文が入ります。 ここには見出し 1-1の本文が入ります。 ここには見出し 1-1の\n本文が入ります。ここには見出し 1-1の本文が入ります。ここには見出し 1-1の本文が入り\nます。ここには見出し 1-1の本文が入ります。ここには見出し 1-1の本文が入ります。ここ\nには見出し 1-1の本文が入ります。ここには見出し 1-1の本文が入ります。  \n \n見出し 1-2 \nここには見出し 1-2の本文が入ります。ここには見出し 1-2の本文が入ります。ここには見\n出し1-2の本文が入ります。 ここには見出し 1-2の本文が入ります。 ここには見出し 1-2の\n本文が入ります。ここには見出し 1-2の本文が入ります。ここには見出し 1-2の本文が入り\nます。  \nここには見出し 1-2の本文が入ります。ここには見出し 1-2の本文が入ります。     \n \n 2  \n ここには見出し 1-2の本文が入ります。ここには見出し 1-2の本文が入ります。  \n \n見出し 1-3 \nここには見出し 1-3の本文が入ります。ここには見出し 1-3の本文が入ります。  \nここには見出し 1-3の本文が入ります。ここには見出し 1-3の本文が入ります。ここには見\n出し1-3の本文が入ります。 ここには見出し 1-3の本文が入ります。 ここには見出し 1-3の\n本文が入ります。ここには見出し 1-3の本文が入ります。  \n     \n \n 3  \n 列1 列2 列3 列4 \n行1列1の本文が入\nります。  行1列2の本文が入\nります。  行1列3の本文が入\nります。  行1列4の本文が入\nります。  \n行2列1の本文が入\nります。  行2列2の本文が入\nります。  行2列3の本文が入\nります。  行2列4の本文が入\nります。  \n行3列1の本文が入\nります。  行3列2の本文が入\nります。  行3列3の本文が入\nります。  行3列4の本文が入\nります。  \n表1. 表1の名前が入ります。  \n \n列1 列2 列3 列4 \n行1列1の本文が\n入ります。  行1列2の本文が\n入ります。  行1列3の本文が\n入ります。  行1列4の本文が\n入ります。  \n行2列1の本文が\n入ります。  行2列2の本文が\n入ります。  行2列3の本文が\n入ります。  行2列4の本文が\n入ります。  \n表2. 表2の名前が入ります。  \n見出し 1-4 \nここには見出し 1-4の本文が入ります。ここには見出し 1-4の本文が入ります。ここには見   \n \n 4  \n 出し1-4の本文が入ります。 ここには見出し 1-4の本文が入ります。 ここには見出し 1-4の\n本文が入ります。ここには見出し 1-4の本文が入ります。ここには見出し 1-4の本文が入り\nます。ここには見出し 1-4の本文が入ります。ここには見出し 1-4の本文が入ります。ここ\nには見出し 1-4の本文が入ります。  \n     \n \n 5  \n 見出し 2 \n \n(項目名が入ります ) \n見出し 2-1 ここには見出し 2-1の本文が入ります。 ここには見出し 2-1の本文が入り\nます。ここには見出し 2-1の本文が入ります。ここには見出し 2-1の本文が入ります。ここ\nには見出し 2-1の本文が入ります。ここには見出し 2-1の本文が入ります。ここには見出し\n2-1の本文が入ります。ここには見出し 2-1の本文が入ります。  \n \n(項目名が入ります ) \n見出し 2-2 ここには見出し 2-2の本文が入ります。 ここには見出し 2-2の本文が入り\nます。ここには見出し 2-2の本文が入ります。ここには見出し 2-2の本文が入ります。ここ\nには見出し 2-2の本文が入ります。ここには見出し 2-2の本文が入ります。ここには見出し\n2-2の本文が入ります。  \nここには見出し 2-2の本文が入ります。  \n \n以上 \n \n \n```\n\nシンプルなPDFなら問題なく読み取れることが分かります。\n\n---\n\n## pypdfの特徴と限界\n\n### メリット\n\n- **軽量で高速**：小規模なPDF処理に最適。\n- **簡単なインストールと利用方法**：コードもシンプルでわかりやすい。\n- **オープンソース**：自由にカスタマイズ可能。\n\n### デメリット\n\n- **表や図の抽出は苦手**：pypdfはテキストの抽出には強いものの、複雑なレイアウトや表形式のデータには非対応です。\n\n---\n\n今回の内容をもとに、ぜひpypdfを活用してみてください！あなたのプロジェクトが一歩進む手助けになれば幸いです。\n\npdfplumberとPyMuPDFのライブラリについても調べていきます。更新をお楽しみに。\n\n---\n\n","createdAt":"2025-05-19T08:50:58.060Z","updatedAt":"2025-06-02T00:20:03.600Z","publishedAt":"2025-06-02T00:20:03.613Z","docId":"x057o8q0sw8x1mgfd61sg26v","tags":[{"id":20,"documentId":"fbllyhmskvu2l7wbg5dzpkri","createdAt":"2025-05-19T09:48:50.341Z","updatedAt":"2025-05-19T09:48:50.341Z","publishedAt":"2025-05-19T09:48:50.348Z","name":"LLM"},{"id":22,"documentId":"enpfq0z697dadtxijwpwwrsv","createdAt":"2025-05-19T09:49:17.862Z","updatedAt":"2025-05-19T09:49:17.862Z","publishedAt":"2025-05-19T09:49:17.870Z","name":"Python"},{"id":24,"documentId":"l1dya7wtq2ct0n1dxm41pl7j","createdAt":"2025-05-19T09:49:40.953Z","updatedAt":"2025-05-19T09:49:40.953Z","publishedAt":"2025-05-19T09:49:40.961Z","name":"RAG"}],"thumbnail":[{"id":21,"documentId":"pf7wlcddclj6q8wxmayf1px4","name":"20250513-17.png","alternativeText":null,"caption":null,"width":1503,"height":844,"formats":{"thumbnail":{"name":"thumbnail_20250513-17.png","hash":"thumbnail_20250513_17_1910dde1ca","ext":".png","mime":"image/png","path":null,"width":245,"height":138,"size":15.21,"sizeInBytes":15213,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/thumbnail_20250513_17_1910dde1ca.png"},"medium":{"name":"medium_20250513-17.png","hash":"medium_20250513_17_1910dde1ca","ext":".png","mime":"image/png","path":null,"width":750,"height":421,"size":59.36,"sizeInBytes":59361,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/medium_20250513_17_1910dde1ca.png"},"small":{"name":"small_20250513-17.png","hash":"small_20250513_17_1910dde1ca","ext":".png","mime":"image/png","path":null,"width":500,"height":281,"size":37.01,"sizeInBytes":37006,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/small_20250513_17_1910dde1ca.png"},"large":{"name":"large_20250513-17.png","hash":"large_20250513_17_1910dde1ca","ext":".png","mime":"image/png","path":null,"width":1000,"height":562,"size":82.31,"sizeInBytes":82309,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/large_20250513_17_1910dde1ca.png"}},"hash":"20250513_17_1910dde1ca","ext":".png","mime":"image/png","size":22.99,"url":"https://stg-raisex-tech-blog.s3.ap-northeast-1.amazonaws.com/20250513_17_1910dde1ca.png","previewUrl":null,"provider":"@strapi/provider-upload-aws-s3","provider_metadata":null,"createdAt":"2025-05-20T07:49:09.998Z","updatedAt":"2025-05-20T07:49:09.998Z","publishedAt":"2025-05-20T07:49:09.999Z"}]}},"__N_SSG":true}